
Solution for Problem 1: Magic Potion Identifier

using System;

class Program
{
    static void Main()
    {
        long power = 132651201231; // Example input
        long root = (long)Math.Round(Math.Pow(power, 1.0 / 3));
        
        if (root * root * root == power)
            Console.WriteLine("YES");
        else
            Console.WriteLine("NO");
    }
}



Solution for Problem 2: Sneaky Outcomes
using System;
using System.Collections.Generic;
using System.Linq;

class Program
{
    static void Main()
    {
        int[] outcomes = {123456, 234567, 123347, 456789, 567890, 678901, 789012, 890123, 901234, 112233, 223344, 334455, 789012, 222234, 123347};
        Dictionary<int, int> freq = new Dictionary<int, int>();

        foreach (int num in outcomes)
        {
            if (freq.ContainsKey(num))
                freq[num]++;
            else
                freq[num] = 1;
        }

        var duplicates = freq.Where(x => x.Value > 1).Select(x => x.Key).ToArray();
        Console.WriteLine($"[{string.Join(", ", duplicates)}]");
    }
}


Solution for Problem 3: Reformat String to Alternating Case
using System;

class Program
{
    static void Main()
    {
        string s = "Za^B8g@E2jH*kWl!MoPqXr7YvT1c$Fs3Ud9IwZ&yX0pLkV6sHqN^tB4rA+oZ%gFj";
        char[] result = s.ToCharArray();
        int count = 0;

        for (int i = 0; i < result.Length; i++)
        {
            if (char.IsLetter(result[i]))
            {
                result[i] = (count % 2 == 0) ? char.ToUpper(result[i]) : char.ToLower(result[i]);
                count++;
            }
        }

        Console.WriteLine(new string(result));
    }
}
